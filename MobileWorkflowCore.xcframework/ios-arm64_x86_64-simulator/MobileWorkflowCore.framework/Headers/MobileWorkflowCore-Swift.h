#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
#ifndef MOBILEWORKFLOWCORE_SWIFT_H
#define MOBILEWORKFLOWCORE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreGraphics;
@import CoreLocation;
@import Foundation;
@import MessageUI;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#import <MobileWorkflowCore/MobileWorkflowCore.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MobileWorkflowCore",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSNumber;
@protocol UIViewControllerTransitionCoordinator;
@class NSString;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC18MobileWorkflowCore28BarcodeScannerViewController")
@interface BarcodeScannerViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (void)viewWillLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class AVCaptureMetadataOutput;
@class AVMetadataObject;
@class AVCaptureConnection;

@interface BarcodeScannerViewController (SWIFT_EXTENSION(MobileWorkflowCore)) <AVCaptureMetadataOutputObjectsDelegate>
- (void)captureOutput:(AVCaptureMetadataOutput * _Nonnull)output didOutputMetadataObjects:(NSArray<AVMetadataObject *> * _Nonnull)metadataObjects fromConnection:(AVCaptureConnection * _Nonnull)connection;
@end





@class NSLocale;
@class NSNumberFormatter;

SWIFT_CLASS("_TtC18MobileWorkflowCore17CurrencyFormatter")
@interface CurrencyFormatter : NSObject
@property (nonatomic, strong) NSLocale * _Nonnull nsLocale;
/// Can be used to set a custom currency code string
@property (nonatomic, copy) NSString * _Nonnull currencyCode;
/// Encapsulated Number formatter
@property (nonatomic, readonly, strong) NSNumberFormatter * _Nonnull numberFormatter;
/// Initialize a new currency formatter with optional configuration handler callback.
/// \param handler configuration handler callback.
///
- (nonnull instancetype)init:(void (^ _Nullable)(CurrencyFormatter * _Nonnull))handler OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface CurrencyFormatter (SWIFT_EXTENSION(MobileWorkflowCore))
/// Returns a currency string from a given double value.
/// \param doubleValue the monetary amount.
///
///
/// returns:
/// formatted currency string.
- (NSString * _Nullable)stringFrom:(double)doubleValue SWIFT_WARN_UNUSED_RESULT;
/// Returns a double (as NSNumber) from a string that represents a numerical value.
/// \param string string that describes the numerical value.
///
///
/// returns:
/// the value as a Double.
- (NSNumber * _Nullable)doubleAsNSNumberFrom:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
/// Receives a currency formatted string and returns its
/// numerical/unformatted representation.
/// \param string currency formatted string
///
///
/// returns:
/// numerical representation
- (NSString * _Nullable)unformattedWithString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end


@protocol UITextFieldDelegate;

/// Custom text field delegate, that formats user inputs based on a given currency formatter.
SWIFT_CLASS("_TtC18MobileWorkflowCore27CurrencyUITextFieldDelegate")
@interface CurrencyUITextFieldDelegate : NSObject
/// A delegate object to receive and potentially handle <code>UITextFieldDelegate events</code> that are sent to <code>CurrencyUITextFieldDelegate</code>.
/// Note: Make sure the implementation of this object does not wrongly interfere with currency formatting.
/// By returning <code>false</code> on<code>textField(textField:shouldChangeCharactersIn:replacementString:)</code> no currency formatting is done.
@property (nonatomic, strong) id <UITextFieldDelegate> _Nullable passthroughDelegate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFormatter:(CurrencyFormatter * _Nonnull)formatter OBJC_DESIGNATED_INITIALIZER;
@end


@class UITextField;

@interface CurrencyUITextFieldDelegate (SWIFT_EXTENSION(MobileWorkflowCore)) <UITextFieldDelegate>
- (BOOL)textFieldShouldBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldEndEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldClear:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string;
@end

@class UITraitCollection;

SWIFT_CLASS("_TtC18MobileWorkflowCore12CustomButton")
@interface CustomButton : UIButton
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic, getter=isSelected) BOOL selected;
@property (nonatomic, getter=isEnabled) BOOL enabled;
- (void)layoutSubviews;
- (void)tintColorDidChange;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



@class NSInputStream;
@class NSOutputStream;

SWIFT_PROTOCOL("_TtP18MobileWorkflowCore14StreamProvider_")
@protocol StreamProvider
- (NSInputStream * _Nullable)inputStreamForFileAtPath:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
- (NSOutputStream * _Nullable)outputStreamForFileAtPath:(NSString * _Nonnull)path append:(BOOL)append SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSFileManager (SWIFT_EXTENSION(MobileWorkflowCore)) <StreamProvider>
- (NSInputStream * _Nullable)inputStreamForFileAtPath:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
- (NSOutputStream * _Nullable)outputStreamForFileAtPath:(NSString * _Nonnull)path append:(BOOL)append SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSFileManager (SWIFT_EXTENSION(MobileWorkflowCore))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSFileManager * _Nonnull mw_sharedManager;)
+ (NSFileManager * _Nonnull)mw_sharedManager SWIFT_WARN_UNUSED_RESULT;
+ (void)setMw_sharedManager:(NSFileManager * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) id <StreamProvider> _Nonnull mw_streamProvider;)
+ (id <StreamProvider> _Nonnull)mw_streamProvider SWIFT_WARN_UNUSED_RESULT;
+ (void)setMw_streamProvider:(id <StreamProvider> _Nonnull)value;
@end

@class NSURL;

SWIFT_CLASS("_TtC18MobileWorkflowCore10FileResult")
@interface FileResult : ORKResult
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL supportsSecureCoding;)
+ (BOOL)supportsSecureCoding SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, getter=isSaveable) BOOL saveable;
/// This convenience method will attempt to use the file extension (based on contentType) as file identifier. If failed, it will return nil
/// \param identifier The identifier for the result
///
/// \param fileURL URL of the file in the device file system. This URL should be accessible through the FileManager.shared
///
/// \param contentType Content-Type of the file
///
- (nullable instancetype)initWithIdentifier:(NSString * _Nonnull)identifier fileURL:(NSURL * _Nonnull)fileURL contentType:(NSString * _Nonnull)contentType;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (NSURL * _Nonnull)getFileURL SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIdentifier:(NSString * _Nonnull)identifier SWIFT_UNAVAILABLE;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC18MobileWorkflowCore15LocationService")
@interface LocationService : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class CLLocationManager;
@class CLLocation;

@interface LocationService (SWIFT_EXTENSION(MobileWorkflowCore)) <CLLocationManagerDelegate>
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didFailWithError:(NSError * _Nonnull)error;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore21MWButtonTableViewCell")
@interface MWButtonTableViewCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore20MWStepViewController")
@interface MWStepViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore27MWContentStepViewController")
@interface MWContentStepViewController : MWStepViewController
- (void)viewDidLoad;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore31MWInstructionStepViewController")
@interface MWInstructionStepViewController : MWContentStepViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore30MWCompletionStepViewController")
@interface MWCompletionStepViewController : MWInstructionStepViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
@end



SWIFT_CLASS("_TtC18MobileWorkflowCore25MWEmailStepViewController")
@interface MWEmailStepViewController : MWInstructionStepViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
@end

@class MFMailComposeViewController;

@interface MWEmailStepViewController (SWIFT_EXTENSION(MobileWorkflowCore)) <MFMailComposeViewControllerDelegate>
- (void)mailComposeController:(MFMailComposeViewController * _Nonnull)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError * _Nullable)error;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore20MWImageTableViewCell")
@interface MWImageTableViewCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end




SWIFT_CLASS("_TtC18MobileWorkflowCore23MWPDFStepViewController")
@interface MWPDFStepViewController : MWContentStepViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIWindow;
@class UIScene;
@class UISceneSession;
@class UISceneConnectionOptions;
@class UIOpenURLContext;
@class NSUserActivity;

SWIFT_CLASS("_TtC18MobileWorkflowCore15MWSceneDelegate")
@interface MWSceneDelegate : UIResponder <UIWindowSceneDelegate>
@property (nonatomic, strong) UIWindow * _Nullable window;
- (void)scene:(UIScene * _Nonnull)scene willConnectToSession:(UISceneSession * _Nonnull)session options:(UISceneConnectionOptions * _Nonnull)connectionOptions;
- (void)scene:(UIScene * _Nonnull)scene openURLContexts:(NSSet<UIOpenURLContext *> * _Nonnull)URLContexts;
- (void)scene:(UIScene * _Nonnull)scene continueUserActivity:(NSUserActivity * _Nonnull)userActivity;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC18MobileWorkflowCore23MWSubtitleTableViewCell")
@interface MWSubtitleTableViewCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore20MWVideoTableViewCell")
@interface MWVideoTableViewCell : MWImageTableViewCell
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore24MWWorkflowViewController")
@interface MWWorkflowViewController : UINavigationController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
@property (nonatomic, readonly, strong) UIViewController * _Nullable childViewControllerForStatusBarStyle;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end










SWIFT_CLASS("_TtC18MobileWorkflowCore20NavigationFooterView")
@interface NavigationFooterView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, getter=isHidden) BOOL hidden;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end












@class UINavigationBar;

@interface ORKStepViewController (SWIFT_EXTENSION(MobileWorkflowCore))
- (void)configureNavigationBar:(UINavigationBar * _Nonnull)navigationBar;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore23QRScannerViewController")
@interface QRScannerViewController : BarcodeScannerViewController
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore38QueueControllerNetworkAsyncTaskService")
@interface QueueControllerNetworkAsyncTaskService : NSObject
- (nonnull instancetype)init;
@end



@class NSURLSession;
@class NSURLAuthenticationChallenge;
@class NSURLCredential;
@class NSURLSessionTask;
@class NSURLRequest;
@class NSHTTPURLResponse;
@class NSURLSessionTaskMetrics;

@interface QueueControllerNetworkAsyncTaskService (SWIFT_EXTENSION(MobileWorkflowCore)) <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession * _Nonnull)session;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willBeginDelayedRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLSessionDelayedRequestDisposition, NSURLRequest * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session taskIsWaitingForConnectivity:(NSURLSessionTask * _Nonnull)task;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task needNewBodyStream:(void (^ _Nonnull)(NSInputStream * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didSendBodyData:(int64_t)bytesSent totalBytesSent:(int64_t)totalBytesSent totalBytesExpectedToSend:(int64_t)totalBytesExpectedToSend;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didFinishCollectingMetrics:(NSURLSessionTaskMetrics * _Nonnull)metrics;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore18RootViewController")
@interface RootViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS_NAMED("Session")
@interface MWSession : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




@interface MWSession (SWIFT_EXTENSION(MobileWorkflowCore))
- (NSString * _Nonnull)resolveValue:(NSString * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (NSURL * _Nullable)resolveUrl:(NSString * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
@end

@class UIBezierPath;
@class UIImage;

SWIFT_CLASS("_TtC18MobileWorkflowCore15SignatureResult")
@interface SignatureResult : ORKResult
@property (nonatomic, readonly, copy) NSArray<UIBezierPath *> * _Nonnull signaturePath;
@property (nonatomic, readonly, copy) NSURL * _Nonnull fileURL;
- (nullable instancetype)initWithSignatureImage:(UIImage * _Nonnull)signatureImage signaturePath:(NSArray * _Nonnull)signaturePath fileManager:(NSFileManager * _Nonnull)fileManager OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithIdentifier:(NSString * _Nonnull)identifier SWIFT_UNAVAILABLE;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface SignatureResult (SWIFT_EXTENSION(MobileWorkflowCore))
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
@property (nonatomic, readonly) NSUInteger hash;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore9StateView")
@interface StateView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore13StepBodyLabel")
@interface StepBodyLabel : UILabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore14StepTitleLabel")
@interface StepTitleLabel : UILabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class UIColor;

SWIFT_CLASS_NAMED("Theme")
@interface MWTheme : NSObject
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryTintColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryNavBarBackgroundColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryNavBarTintColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryNavBarTitleColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryNavBarShadowColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryBackgroundColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull marginBackgroundColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull imagePlaceholderBackgroundColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryTextColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull secondaryTextColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull warningTextColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryButtonColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryButtonTextColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull destructiveButtonColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull destructiveButtonTextColor;
@property (nonatomic, readonly) CGFloat buttonBorderWidth;
@property (nonatomic, readonly) CGFloat buttonCornerRadius;
@property (nonatomic, readonly, strong) UIColor * _Nonnull groupedNavBarBackgroundColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull groupedNavBarTintColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull groupedNavBarTitleColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull groupedNavBarShadowColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull groupedBackgroundColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull groupedCellBackgroundColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface MWTheme (SWIFT_EXTENSION(MobileWorkflowCore))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) MWTheme * _Nonnull current;)
+ (MWTheme * _Nonnull)current SWIFT_WARN_UNUSED_RESULT;
+ (void)setCurrent:(MWTheme * _Nonnull)value;
@end






@interface UIColor (SWIFT_EXTENSION(MobileWorkflowCore))
@property (nonatomic, readonly) BOOL isDarkBackgroundForText;
- (UIStatusBarStyle)statusBarStyleForBestContrast SWIFT_WARN_UNUSED_RESULT;
@end




















@interface WKWebView (SWIFT_EXTENSION(MobileWorkflowCore))
- (void)mw_configureAppBoundDomains;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
#ifndef MOBILEWORKFLOWCORE_SWIFT_H
#define MOBILEWORKFLOWCORE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreGraphics;
@import CoreLocation;
@import Foundation;
@import MessageUI;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#import <MobileWorkflowCore/MobileWorkflowCore.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MobileWorkflowCore",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSNumber;
@protocol UIViewControllerTransitionCoordinator;
@class NSString;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC18MobileWorkflowCore28BarcodeScannerViewController")
@interface BarcodeScannerViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (void)viewWillLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class AVCaptureMetadataOutput;
@class AVMetadataObject;
@class AVCaptureConnection;

@interface BarcodeScannerViewController (SWIFT_EXTENSION(MobileWorkflowCore)) <AVCaptureMetadataOutputObjectsDelegate>
- (void)captureOutput:(AVCaptureMetadataOutput * _Nonnull)output didOutputMetadataObjects:(NSArray<AVMetadataObject *> * _Nonnull)metadataObjects fromConnection:(AVCaptureConnection * _Nonnull)connection;
@end





@class NSLocale;
@class NSNumberFormatter;

SWIFT_CLASS("_TtC18MobileWorkflowCore17CurrencyFormatter")
@interface CurrencyFormatter : NSObject
@property (nonatomic, strong) NSLocale * _Nonnull nsLocale;
/// Can be used to set a custom currency code string
@property (nonatomic, copy) NSString * _Nonnull currencyCode;
/// Encapsulated Number formatter
@property (nonatomic, readonly, strong) NSNumberFormatter * _Nonnull numberFormatter;
/// Initialize a new currency formatter with optional configuration handler callback.
/// \param handler configuration handler callback.
///
- (nonnull instancetype)init:(void (^ _Nullable)(CurrencyFormatter * _Nonnull))handler OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface CurrencyFormatter (SWIFT_EXTENSION(MobileWorkflowCore))
/// Returns a currency string from a given double value.
/// \param doubleValue the monetary amount.
///
///
/// returns:
/// formatted currency string.
- (NSString * _Nullable)stringFrom:(double)doubleValue SWIFT_WARN_UNUSED_RESULT;
/// Returns a double (as NSNumber) from a string that represents a numerical value.
/// \param string string that describes the numerical value.
///
///
/// returns:
/// the value as a Double.
- (NSNumber * _Nullable)doubleAsNSNumberFrom:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
/// Receives a currency formatted string and returns its
/// numerical/unformatted representation.
/// \param string currency formatted string
///
///
/// returns:
/// numerical representation
- (NSString * _Nullable)unformattedWithString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end


@protocol UITextFieldDelegate;

/// Custom text field delegate, that formats user inputs based on a given currency formatter.
SWIFT_CLASS("_TtC18MobileWorkflowCore27CurrencyUITextFieldDelegate")
@interface CurrencyUITextFieldDelegate : NSObject
/// A delegate object to receive and potentially handle <code>UITextFieldDelegate events</code> that are sent to <code>CurrencyUITextFieldDelegate</code>.
/// Note: Make sure the implementation of this object does not wrongly interfere with currency formatting.
/// By returning <code>false</code> on<code>textField(textField:shouldChangeCharactersIn:replacementString:)</code> no currency formatting is done.
@property (nonatomic, strong) id <UITextFieldDelegate> _Nullable passthroughDelegate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFormatter:(CurrencyFormatter * _Nonnull)formatter OBJC_DESIGNATED_INITIALIZER;
@end


@class UITextField;

@interface CurrencyUITextFieldDelegate (SWIFT_EXTENSION(MobileWorkflowCore)) <UITextFieldDelegate>
- (BOOL)textFieldShouldBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldEndEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldClear:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string;
@end

@class UITraitCollection;

SWIFT_CLASS("_TtC18MobileWorkflowCore12CustomButton")
@interface CustomButton : UIButton
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic, getter=isSelected) BOOL selected;
@property (nonatomic, getter=isEnabled) BOOL enabled;
- (void)layoutSubviews;
- (void)tintColorDidChange;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



@class NSInputStream;
@class NSOutputStream;

SWIFT_PROTOCOL("_TtP18MobileWorkflowCore14StreamProvider_")
@protocol StreamProvider
- (NSInputStream * _Nullable)inputStreamForFileAtPath:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
- (NSOutputStream * _Nullable)outputStreamForFileAtPath:(NSString * _Nonnull)path append:(BOOL)append SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSFileManager (SWIFT_EXTENSION(MobileWorkflowCore)) <StreamProvider>
- (NSInputStream * _Nullable)inputStreamForFileAtPath:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
- (NSOutputStream * _Nullable)outputStreamForFileAtPath:(NSString * _Nonnull)path append:(BOOL)append SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSFileManager (SWIFT_EXTENSION(MobileWorkflowCore))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSFileManager * _Nonnull mw_sharedManager;)
+ (NSFileManager * _Nonnull)mw_sharedManager SWIFT_WARN_UNUSED_RESULT;
+ (void)setMw_sharedManager:(NSFileManager * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) id <StreamProvider> _Nonnull mw_streamProvider;)
+ (id <StreamProvider> _Nonnull)mw_streamProvider SWIFT_WARN_UNUSED_RESULT;
+ (void)setMw_streamProvider:(id <StreamProvider> _Nonnull)value;
@end

@class NSURL;

SWIFT_CLASS("_TtC18MobileWorkflowCore10FileResult")
@interface FileResult : ORKResult
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL supportsSecureCoding;)
+ (BOOL)supportsSecureCoding SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, getter=isSaveable) BOOL saveable;
/// This convenience method will attempt to use the file extension (based on contentType) as file identifier. If failed, it will return nil
/// \param identifier The identifier for the result
///
/// \param fileURL URL of the file in the device file system. This URL should be accessible through the FileManager.shared
///
/// \param contentType Content-Type of the file
///
- (nullable instancetype)initWithIdentifier:(NSString * _Nonnull)identifier fileURL:(NSURL * _Nonnull)fileURL contentType:(NSString * _Nonnull)contentType;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (NSURL * _Nonnull)getFileURL SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIdentifier:(NSString * _Nonnull)identifier SWIFT_UNAVAILABLE;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC18MobileWorkflowCore15LocationService")
@interface LocationService : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class CLLocationManager;
@class CLLocation;

@interface LocationService (SWIFT_EXTENSION(MobileWorkflowCore)) <CLLocationManagerDelegate>
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didFailWithError:(NSError * _Nonnull)error;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore21MWButtonTableViewCell")
@interface MWButtonTableViewCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore20MWStepViewController")
@interface MWStepViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore27MWContentStepViewController")
@interface MWContentStepViewController : MWStepViewController
- (void)viewDidLoad;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore31MWInstructionStepViewController")
@interface MWInstructionStepViewController : MWContentStepViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore30MWCompletionStepViewController")
@interface MWCompletionStepViewController : MWInstructionStepViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
@end



SWIFT_CLASS("_TtC18MobileWorkflowCore25MWEmailStepViewController")
@interface MWEmailStepViewController : MWInstructionStepViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
@end

@class MFMailComposeViewController;

@interface MWEmailStepViewController (SWIFT_EXTENSION(MobileWorkflowCore)) <MFMailComposeViewControllerDelegate>
- (void)mailComposeController:(MFMailComposeViewController * _Nonnull)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError * _Nullable)error;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore20MWImageTableViewCell")
@interface MWImageTableViewCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end




SWIFT_CLASS("_TtC18MobileWorkflowCore23MWPDFStepViewController")
@interface MWPDFStepViewController : MWContentStepViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIWindow;
@class UIScene;
@class UISceneSession;
@class UISceneConnectionOptions;
@class UIOpenURLContext;
@class NSUserActivity;

SWIFT_CLASS("_TtC18MobileWorkflowCore15MWSceneDelegate")
@interface MWSceneDelegate : UIResponder <UIWindowSceneDelegate>
@property (nonatomic, strong) UIWindow * _Nullable window;
- (void)scene:(UIScene * _Nonnull)scene willConnectToSession:(UISceneSession * _Nonnull)session options:(UISceneConnectionOptions * _Nonnull)connectionOptions;
- (void)scene:(UIScene * _Nonnull)scene openURLContexts:(NSSet<UIOpenURLContext *> * _Nonnull)URLContexts;
- (void)scene:(UIScene * _Nonnull)scene continueUserActivity:(NSUserActivity * _Nonnull)userActivity;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC18MobileWorkflowCore23MWSubtitleTableViewCell")
@interface MWSubtitleTableViewCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore20MWVideoTableViewCell")
@interface MWVideoTableViewCell : MWImageTableViewCell
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore24MWWorkflowViewController")
@interface MWWorkflowViewController : UINavigationController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
@property (nonatomic, readonly, strong) UIViewController * _Nullable childViewControllerForStatusBarStyle;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end










SWIFT_CLASS("_TtC18MobileWorkflowCore20NavigationFooterView")
@interface NavigationFooterView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, getter=isHidden) BOOL hidden;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end












@class UINavigationBar;

@interface ORKStepViewController (SWIFT_EXTENSION(MobileWorkflowCore))
- (void)configureNavigationBar:(UINavigationBar * _Nonnull)navigationBar;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore23QRScannerViewController")
@interface QRScannerViewController : BarcodeScannerViewController
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore38QueueControllerNetworkAsyncTaskService")
@interface QueueControllerNetworkAsyncTaskService : NSObject
- (nonnull instancetype)init;
@end



@class NSURLSession;
@class NSURLAuthenticationChallenge;
@class NSURLCredential;
@class NSURLSessionTask;
@class NSURLRequest;
@class NSHTTPURLResponse;
@class NSURLSessionTaskMetrics;

@interface QueueControllerNetworkAsyncTaskService (SWIFT_EXTENSION(MobileWorkflowCore)) <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession * _Nonnull)session;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willBeginDelayedRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLSessionDelayedRequestDisposition, NSURLRequest * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session taskIsWaitingForConnectivity:(NSURLSessionTask * _Nonnull)task;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task needNewBodyStream:(void (^ _Nonnull)(NSInputStream * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didSendBodyData:(int64_t)bytesSent totalBytesSent:(int64_t)totalBytesSent totalBytesExpectedToSend:(int64_t)totalBytesExpectedToSend;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didFinishCollectingMetrics:(NSURLSessionTaskMetrics * _Nonnull)metrics;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore18RootViewController")
@interface RootViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS_NAMED("Session")
@interface MWSession : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




@interface MWSession (SWIFT_EXTENSION(MobileWorkflowCore))
- (NSString * _Nonnull)resolveValue:(NSString * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (NSURL * _Nullable)resolveUrl:(NSString * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
@end

@class UIBezierPath;
@class UIImage;

SWIFT_CLASS("_TtC18MobileWorkflowCore15SignatureResult")
@interface SignatureResult : ORKResult
@property (nonatomic, readonly, copy) NSArray<UIBezierPath *> * _Nonnull signaturePath;
@property (nonatomic, readonly, copy) NSURL * _Nonnull fileURL;
- (nullable instancetype)initWithSignatureImage:(UIImage * _Nonnull)signatureImage signaturePath:(NSArray * _Nonnull)signaturePath fileManager:(NSFileManager * _Nonnull)fileManager OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithIdentifier:(NSString * _Nonnull)identifier SWIFT_UNAVAILABLE;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface SignatureResult (SWIFT_EXTENSION(MobileWorkflowCore))
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
@property (nonatomic, readonly) NSUInteger hash;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore9StateView")
@interface StateView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore13StepBodyLabel")
@interface StepBodyLabel : UILabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC18MobileWorkflowCore14StepTitleLabel")
@interface StepTitleLabel : UILabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class UIColor;

SWIFT_CLASS_NAMED("Theme")
@interface MWTheme : NSObject
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryTintColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryNavBarBackgroundColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryNavBarTintColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryNavBarTitleColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryNavBarShadowColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryBackgroundColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull marginBackgroundColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull imagePlaceholderBackgroundColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryTextColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull secondaryTextColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull warningTextColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryButtonColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryButtonTextColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull destructiveButtonColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull destructiveButtonTextColor;
@property (nonatomic, readonly) CGFloat buttonBorderWidth;
@property (nonatomic, readonly) CGFloat buttonCornerRadius;
@property (nonatomic, readonly, strong) UIColor * _Nonnull groupedNavBarBackgroundColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull groupedNavBarTintColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull groupedNavBarTitleColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull groupedNavBarShadowColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull groupedBackgroundColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull groupedCellBackgroundColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface MWTheme (SWIFT_EXTENSION(MobileWorkflowCore))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) MWTheme * _Nonnull current;)
+ (MWTheme * _Nonnull)current SWIFT_WARN_UNUSED_RESULT;
+ (void)setCurrent:(MWTheme * _Nonnull)value;
@end






@interface UIColor (SWIFT_EXTENSION(MobileWorkflowCore))
@property (nonatomic, readonly) BOOL isDarkBackgroundForText;
- (UIStatusBarStyle)statusBarStyleForBestContrast SWIFT_WARN_UNUSED_RESULT;
@end




















@interface WKWebView (SWIFT_EXTENSION(MobileWorkflowCore))
- (void)mw_configureAppBoundDomains;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
